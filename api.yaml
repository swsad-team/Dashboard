swagger: '2.0'
info:
  version: 0.5.0
  title: Swagger Earnmoney
host: localhost:3000
basePath: '/'
tags:
  - name: user
    description: Operations about user
  - name: task
    description: Operations about task
schemes:
  - http
  - https
paths:
  /user/signup:
    post:
      tags:
        - user
      summary: Sign up a user
      description: ''
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              phone:
                type: string
              name:
                type: string
              password:
                type: string
              isOrganization:
                type: boolean
              realname:
                type: string
              birthYear:
                type: number
              gender:
                type: string
                enum:
                  - male
                  - female
                  - other
              studentID:
                type: string
              address:
                type: string
      responses:
        200:
          description: OK
        400:
          description: email/phone exists, return error message
          schema:
            type: string
  /user/login:
    get:
      tags:
        - user
      summary: User login
      description: ''
      parameters:
        - name: body
          in: body
          description: The phone/email & password for login
          required: true
          schema:
            type: object
            properties:
              account:
                type: string
              password:
                type: string
      responses:
        200:
          description: successfully login, return a token
          schema:
            type: string
        400:
          description: Password doesnot match account
        404:
          description: Not found account
  /task/page:
    get:
      tags:
        - task
      summary: Get count of pages
      description: Count of pages = round( Count of task / 10 ); e.g. task 34, page 4
      responses:
        default:
          description: return the integer of pageNum, 0 if no tasks
          schema:
            type: integer
            example: 4
  /task/{pageId}:
    get:
      tags:
        - task
      summary: Get an array of tasks
      description: pageId is 0~n, get 10 tasks each page
      parameters:
        - name: pageId
          in: path
          description: The id of page, start from 0
          required: true
          type: integer
      responses:
        200:
          description: OK, return 1~10 tasks
          schema:
            type: array
            items:
              type: object
              properties:
                tid:
                  type: number
                title:
                  type: string
                description:
                  type: string
                isQuestion:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                reward:
                  type: number
                coinPool:
                  type: number
                numOfPeople:
                  type: number
        404:
          description: Not found page (pageId > pageNum)
definitions:
  User:
    type: object
    properties:
      uid:
        type: number
      email:
        type: string
      phone:
        type: string
      name:
        type: string
      password:
        type: string
      isOrganization:
        type: boolean
      coin:
        type: number
      realname:
        type: string
      birthYear:
        type: number
      gender:
        type: string
        enum:
          - male
          - female
          - other
      studentID:
        type: string
      address:
        type: string
    xml:
      name: User
  Task:
    type: object
    properties:
      tid:
        type: number
      title:
        type: string
      description:
        type: string
      isQuestion:
        type: boolean
      startTime:
        type: string
        format: date-time
      endTime:
        type: string
        format: date-time
      reward:
        type: number
      coinPool:
        type: number
      numOfPeople:
        type: number
      participant:
        type: array
        items:
          type: number
      finisher:
        type: array
        items:
          type: number
      question:
        type: array
        items:
          type: object
          properties:
            isRequired:
              type: boolean
            questionType:
              type: string
              enum:
                - fill
                - single
                - multiple
            questionTitle:
              type: string
            option:
              type: array
              items:
                type: string
    xml:
      name: Task
  ApiResponse:
    type: object
    properties:
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
